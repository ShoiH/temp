・Cakephpではモデルに記述していたバリデーション処理をコントローラに記載することができるため、コードの可読性が高いなどの利点もある。
Form機能の使用が多いアプリケーションでは上記の利点を特に享受できると考える。

・ファイルのアップロード処理でも現在主流になっているクラウドストレージを利用するためのインターフェースが用意されており、モダン技術との連携を簡単に記述することができる。
参考URL先のコードでも複雑な記述が見られないため、実際記述する際にかなり苦労するなどのことは小ないと考える。
参考URL：https://qiita.com/zz22394/items/cd960124c3aec164a24d

・データ管理ではLaravel環境内にファイル用ディレクトリが用意されているため、環境を汚さず管理しやすくなっている。
基本は用意されたディレクトリへの保存が指定されているが、カスタマイズは可能である。
参考URL：https://teratail.com/questions/106817

・上記のメリットなどによってphpフレームワーク全体におけるシェア率が上がっているため、習得する価値が高い技術である。
参考URL：https://s8a.jp/cakephp-3-vs-laravel-5

・日本語の情報が少ないというデメリットが挙げられていたが、CakePhpでも３は情報は少ないため比較した場合のデメリットとしては大きくないと思われる。

・パンくず機能が用意してあるので自分で実装する必要はない
参考URL：https://developers.gnavi.co.jp/entry/laravel-2

・ディレクトリ構造が自由である、これはメリットでもありデメリットにもなりうると考える、メリットは柔軟な構造でプロジェクト毎にカスタマイズしチームや自分にとって、
使いやすい構造にすることができる、反面構造をしっかりと把握していないとバグの要因になり得ると考える。

まとめ
調べる限り書ききれないほど機能があり、全てを理解するのも難しく理解できないものも多かった。
開発していく中で理解できてくる部分もあるだろうが、常にツールを使いこなすための学習が必要そうなフレイムワークであると感じた。